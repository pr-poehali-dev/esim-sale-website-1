import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import Icon from "@/components/ui/icon";

interface ESIMPlan {
  id: string;
  country: string;
  countryCode: string;
  region: string;
  flag: string;
  plans: {
    id: string;
    data: string;
    duration: string;
    price: number;
    popular?: boolean;
  }[];
}

const Catalog = () => {
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedRegion, setSelectedRegion] = useState("all");

  const esimPlans: ESIMPlan[] = [
    {
      id: "usa",
      country: "–°–®–ê",
      countryCode: "US",
      region: "america",
      flag: "üá∫üá∏",
      plans: [
        {
          id: "usa-1",
          data: "5 –ì–ë",
          duration: "7 –¥–Ω–µ–π",
          price: 12,
          popular: true,
        },
        { id: "usa-2", data: "10 –ì–ë", duration: "15 –¥–Ω–µ–π", price: 24 },
        { id: "usa-3", data: "20 –ì–ë", duration: "30 –¥–Ω–µ–π", price: 45 },
      ],
    },
    {
      id: "germany",
      country: "–ì–µ—Ä–º–∞–Ω–∏—è",
      countryCode: "DE",
      region: "europe",
      flag: "üá©üá™",
      plans: [
        { id: "de-1", data: "3 –ì–ë", duration: "7 –¥–Ω–µ–π", price: 8 },
        {
          id: "de-2",
          data: "8 –ì–ë",
          duration: "15 –¥–Ω–µ–π",
          price: 18,
          popular: true,
        },
        { id: "de-3", data: "15 –ì–ë", duration: "30 –¥–Ω–µ–π", price: 32 },
      ],
    },
    {
      id: "japan",
      country: "–Ø–ø–æ–Ω–∏—è",
      countryCode: "JP",
      region: "asia",
      flag: "üáØüáµ",
      plans: [
        { id: "jp-1", data: "5 –ì–ë", duration: "7 –¥–Ω–µ–π", price: 15 },
        {
          id: "jp-2",
          data: "10 –ì–ë",
          duration: "15 –¥–Ω–µ–π",
          price: 28,
          popular: true,
        },
        { id: "jp-3", data: "25 –ì–ë", duration: "30 –¥–Ω–µ–π", price: 55 },
      ],
    },
    {
      id: "france",
      country: "–§—Ä–∞–Ω—Ü–∏—è",
      countryCode: "FR",
      region: "europe",
      flag: "üá´üá∑",
      plans: [
        { id: "fr-1", data: "3 –ì–ë", duration: "7 –¥–Ω–µ–π", price: 9 },
        { id: "fr-2", data: "8 –ì–ë", duration: "15 –¥–Ω–µ–π", price: 19 },
        {
          id: "fr-3",
          data: "15 –ì–ë",
          duration: "30 –¥–Ω–µ–π",
          price: 34,
          popular: true,
        },
      ],
    },
    {
      id: "thailand",
      country: "–¢–∞–∏–ª–∞–Ω–¥",
      countryCode: "TH",
      region: "asia",
      flag: "üáπüá≠",
      plans: [
        { id: "th-1", data: "5 –ì–ë", duration: "7 –¥–Ω–µ–π", price: 11 },
        {
          id: "th-2",
          data: "12 –ì–ë",
          duration: "15 –¥–Ω–µ–π",
          price: 22,
          popular: true,
        },
        { id: "th-3", data: "20 –ì–ë", duration: "30 –¥–Ω–µ–π", price: 38 },
      ],
    },
    {
      id: "uk",
      country: "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è",
      countryCode: "GB",
      region: "europe",
      flag: "üá¨üáß",
      plans: [
        { id: "uk-1", data: "4 –ì–ë", duration: "7 –¥–Ω–µ–π", price: 10 },
        {
          id: "uk-2",
          data: "10 –ì–ë",
          duration: "15 –¥–Ω–µ–π",
          price: 21,
          popular: true,
        },
        { id: "uk-3", data: "18 –ì–ë", duration: "30 –¥–Ω–µ–π", price: 39 },
      ],
    },
  ];

  const regions = [
    { id: "all", name: "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã", icon: "Globe" },
    { id: "europe", name: "–ï–≤—Ä–æ–ø–∞", icon: "MapPin" },
    { id: "asia", name: "–ê–∑–∏—è", icon: "MapPin" },
    { id: "america", name: "–ê–º–µ—Ä–∏–∫–∞", icon: "MapPin" },
  ];

  const filteredPlans = esimPlans.filter((plan) => {
    const matchesSearch = plan.country
      .toLowerCase()
      .includes(searchQuery.toLowerCase());
    const matchesRegion =
      selectedRegion === "all" || plan.region === selectedRegion;
    return matchesSearch && matchesRegion;
  });

  const handlePurchase = (planId: string, countryName: string) => {
    alert(
      `–ü–æ–∫—É–ø–∫–∞ eSIM –¥–ª—è ${countryName} (ID: ${planId})\n\n–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π!`,
    );
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      <div className="container mx-auto px-4 py-8">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            –ö–∞—Ç–∞–ª–æ–≥ eSIM
          </h1>
          <p className="text-gray-600 text-lg max-w-2xl mx-auto">
            –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
            –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.
          </p>
        </div>

        {/* Search and Filters */}
        <div className="bg-white rounded-lg shadow-sm border p-6 mb-8">
          <div className="flex flex-col md:flex-row gap-4 items-start md:items-center">
            <div className="flex-1">
              <div className="relative">
                <Icon
                  name="Search"
                  className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"
                  size={20}
                />
                <Input
                  placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å—Ç—Ä–∞–Ω–µ..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="pl-10"
                />
              </div>
            </div>
            <div className="flex flex-wrap gap-2">
              {regions.map((region) => (
                <Button
                  key={region.id}
                  variant={selectedRegion === region.id ? "default" : "outline"}
                  size="sm"
                  onClick={() => setSelectedRegion(region.id)}
                  className="flex items-center gap-2"
                >
                  <Icon name={region.icon as any} size={16} />
                  {region.name}
                </Button>
              ))}
            </div>
          </div>
        </div>

        {/* Plans Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
          {filteredPlans.map((country) => (
            <Card
              key={country.id}
              className="hover:shadow-lg transition-shadow"
            >
              <CardHeader className="pb-4">
                <CardTitle className="flex items-center gap-3">
                  <span className="text-2xl">{country.flag}</span>
                  <div>
                    <h3 className="text-lg font-semibold">{country.country}</h3>
                    <p className="text-sm text-gray-500 font-normal">
                      {country.countryCode}
                    </p>
                  </div>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {country.plans.map((plan) => (
                  <div
                    key={plan.id}
                    className="relative border rounded-lg p-4 hover:bg-gray-50 transition-colors"
                  >
                    {plan.popular && (
                      <Badge className="absolute -top-2 left-4 bg-blue-600">
                        –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                      </Badge>
                    )}
                    <div className="flex justify-between items-start mb-3">
                      <div>
                        <div className="font-semibold text-gray-900">
                          {plan.data}
                        </div>
                        <div className="text-sm text-gray-600">
                          {plan.duration}
                        </div>
                      </div>
                      <div className="text-right">
                        <div className="text-2xl font-bold text-blue-600">
                          ${plan.price}
                        </div>
                      </div>
                    </div>
                    <Button
                      className="w-full"
                      size="sm"
                      onClick={() => handlePurchase(plan.id, country.country)}
                    >
                      <Icon name="Zap" size={16} />
                      –ö—É–ø–∏—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
                    </Button>
                  </div>
                ))}
              </CardContent>
            </Card>
          ))}
        </div>

        {filteredPlans.length === 0 && (
          <div className="text-center py-12">
            <Icon
              name="Search"
              className="mx-auto text-gray-400 mb-4"
              size={48}
            />
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            </h3>
            <p className="text-gray-600">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
            </p>
          </div>
        )}

        {/* Info Section */}
        <div className="mt-12 bg-blue-50 rounded-lg p-6">
          <div className="flex items-start gap-4">
            <Icon
              name="Info"
              className="text-blue-600 flex-shrink-0 mt-1"
              size={20}
            />
            <div>
              <h3 className="font-semibold text-gray-900 mb-2">
                –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>
                  ‚Ä¢ eSIM –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ
                  –æ–ø–ª–∞—Ç—ã
                </li>
                <li>
                  ‚Ä¢ QR-–∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ—á—Ç—É
                </li>
                <li>
                  ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ iPhone XS/XR –∏ –Ω–æ–≤–µ–µ, Google Pixel
                  3 –∏ –Ω–æ–≤–µ–µ
                </li>
                <li>
                  ‚Ä¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É –ø–æ –ø—Ä–∏–ª—ë—Ç—É –≤ —Å—Ç—Ä–∞–Ω—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default Catalog;
